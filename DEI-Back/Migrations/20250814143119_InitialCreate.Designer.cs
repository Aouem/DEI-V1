// <auto-generated />
using System;
using DEI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DEI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250814143119_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DEI.Models.ActionCorrective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EstTerminee")
                        .HasColumnType("bit");

                    b.Property<int>("EvenementIndesirableId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsableId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EvenementIndesirableId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("ActionsCorrectives");
                });

            modelBuilder.Entity("DEI.Models.AlarmAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlarmResponseId")
                        .HasColumnType("int");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Reponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SousCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlarmResponseId");

                    b.ToTable("AlarmAnswers");
                });

            modelBuilder.Entity("DEI.Models.AlarmResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AlarmResponses");
                });

            modelBuilder.Entity("DEI.Models.EvenementIndesirable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDeclaration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDetection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSurvenue")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeclarantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("FamilleEvenementIndesirableId")
                        .HasColumnType("int");

                    b.Property<int>("Gravite")
                        .HasColumnType("int");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesureImmediat")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeclarantId");

                    b.HasIndex("FamilleEvenementIndesirableId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("DEI.Models.FamilleEvenementIndesirable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamillesEvenementsIndesirables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Default"
                        });
                });

            modelBuilder.Entity("DEI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasFilter("[Nom] IS NOT NULL");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Direction Générale"
                        });
                });

            modelBuilder.Entity("DEI.Models.Utilisateur", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fonction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "admin@example.com",
                            Fonction = "Administrateur",
                            Password = "AQAAAAIAAYagAAAAED5Ln034nf+Y8SBQK6ODKao953qvvfvnNwePEquXT2FTSBT2iz7DM+3gEDg9xcuAwQ==",
                            Role = "ADMIN",
                            ServiceId = 1,
                            Tel = "12345678",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("DEI.Models.ActionCorrective", b =>
                {
                    b.HasOne("DEI.Models.EvenementIndesirable", "EvenementIndesirable")
                        .WithMany("ActionsCorrectives")
                        .HasForeignKey("EvenementIndesirableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DEI.Models.Utilisateur", "Responsable")
                        .WithMany("ActionsCorrectivesResponsable")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EvenementIndesirable");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("DEI.Models.AlarmAnswer", b =>
                {
                    b.HasOne("DEI.Models.AlarmResponse", "AlarmResponse")
                        .WithMany("Reponses")
                        .HasForeignKey("AlarmResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlarmResponse");
                });

            modelBuilder.Entity("DEI.Models.EvenementIndesirable", b =>
                {
                    b.HasOne("DEI.Models.Utilisateur", "Declarant")
                        .WithMany("EvenementsDeclarés")
                        .HasForeignKey("DeclarantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DEI.Models.FamilleEvenementIndesirable", "Famille")
                        .WithMany("Evenements")
                        .HasForeignKey("FamilleEvenementIndesirableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DEI.Models.Service", null)
                        .WithMany("Evenements")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Declarant");

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("DEI.Models.Utilisateur", b =>
                {
                    b.HasOne("DEI.Models.Service", "Service")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Service");
                });

            modelBuilder.Entity("DEI.Models.AlarmResponse", b =>
                {
                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("DEI.Models.EvenementIndesirable", b =>
                {
                    b.Navigation("ActionsCorrectives");
                });

            modelBuilder.Entity("DEI.Models.FamilleEvenementIndesirable", b =>
                {
                    b.Navigation("Evenements");
                });

            modelBuilder.Entity("DEI.Models.Service", b =>
                {
                    b.Navigation("Evenements");

                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("DEI.Models.Utilisateur", b =>
                {
                    b.Navigation("ActionsCorrectivesResponsable");

                    b.Navigation("EvenementsDeclarés");
                });
#pragma warning restore 612, 618
        }
    }
}
